"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const User_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/User"));
class UsuariosController {
    async store({ auth, request, response }) {
        const user = new User_1.default();
        const Nombre = request.input('Nombre');
        const email = request.input('email');
        const password = request.input('password');
        const rol = 2;
        try {
            user.Nombre = Nombre;
            user.email = email;
            user.password = password;
            user.rol = rol;
            await user.save();
            return response.status(200);
        }
        catch {
            return response.badRequest('No tienes permisos');
        }
    }
    async show({ auth, response }) {
        try {
            await auth.use('api').authenticate();
            console.log(auth.use('api').user);
            const user = await User_1.default.all();
            return user;
        }
        catch {
            response.badRequest('No tienes permiso');
        }
    }
    async update({ auth, request, response }) {
        const id = request.input('id');
        const Nombre = request.input('Nombre');
        const email = request.input('email');
        const password = request.input('password');
        try {
            await auth.use('api').authenticate();
            console.log(auth.use('api').user);
            const user = await User_1.default.findOrFail(id);
            user.Nombre = Nombre;
            user.email = email;
            user.password = password;
            await user.save();
        }
        catch {
            return response.badRequest('ERROR');
        }
    }
    async delete({ auth, request, response }) {
        const id = request.input('id');
        try {
            await auth.use('api').authenticate();
            console.log(auth.use('api').user);
            const user = await User_1.default.findOrFail(id);
            await user.delete();
        }
        catch {
            return response.badRequest('ERROR');
        }
    }
}
exports.default = UsuariosController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXN1YXJpb3NDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXN1YXJpb3NDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0EsaUZBQW1DO0FBRW5DLE1BQXFCLGtCQUFrQjtJQUU1QixLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUM7UUFFdEMsTUFBTSxJQUFJLEdBQUMsSUFBSSxjQUFJLEVBQUUsQ0FBQTtRQUNyQixNQUFNLE1BQU0sR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQ3BDLE1BQU0sS0FBSyxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDbEMsTUFBTSxRQUFRLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUN4QyxNQUFNLEdBQUcsR0FBQyxDQUFDLENBQUE7UUFDWCxJQUNBO1lBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBQyxNQUFNLENBQUE7WUFDbEIsSUFBSSxDQUFDLEtBQUssR0FBQyxLQUFLLENBQUE7WUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBQyxRQUFRLENBQUE7WUFDdEIsSUFBSSxDQUFDLEdBQUcsR0FBQyxHQUFHLENBQUE7WUFDWixNQUFNLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUNqQixPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7UUFBQSxNQUNEO1lBQ0ksT0FBTyxRQUFRLENBQUMsVUFBVSxDQUFDLG9CQUFvQixDQUFDLENBQUE7U0FDbkQ7SUFDTCxDQUFDO0lBQ00sS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFDLElBQUksRUFBQyxRQUFRLEVBQUM7UUFFN0IsSUFDQTtZQUNJLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtZQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSyxDQUFDLENBQUE7WUFDbEMsTUFBTSxJQUFJLEdBQUMsTUFBTSxjQUFJLENBQUMsR0FBRyxFQUFFLENBQUE7WUFDM0IsT0FBTyxJQUFJLENBQUE7U0FDZDtRQUFBLE1BQ0Q7WUFDSSxRQUFRLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUE7U0FDM0M7SUFDTCxDQUFDO0lBQ00sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsUUFBUSxFQUFDO1FBRXZDLE1BQU0sRUFBRSxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDNUIsTUFBTSxNQUFNLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUNwQyxNQUFNLEtBQUssR0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ2xDLE1BQU0sUUFBUSxHQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDeEMsSUFDQTtZQUNJLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtZQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSyxDQUFDLENBQUE7WUFDbEMsTUFBTSxJQUFJLEdBQUMsTUFBTSxjQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUMsTUFBTSxDQUFBO1lBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUMsS0FBSyxDQUFBO1lBQ2hCLElBQUksQ0FBQyxRQUFRLEdBQUMsUUFBUSxDQUFBO1lBQ3RCLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRSxDQUFBO1NBQ3BCO1FBQUEsTUFDRDtZQUNJLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQTtTQUN0QztJQUNMLENBQUM7SUFDTSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUM7UUFFdkMsTUFBTSxFQUFFLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUM1QixJQUNBO1lBQ0ksTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLFlBQVksRUFBRSxDQUFBO1lBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFLLENBQUMsQ0FBQTtZQUNsQyxNQUFNLElBQUksR0FBQyxNQUFNLGNBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUE7WUFDcEMsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUE7U0FDdEI7UUFBQSxNQUNEO1lBQ0ksT0FBTyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1NBQ3RDO0lBQ0wsQ0FBQztDQUNKO0FBckVELHFDQXFFQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXG5pbXBvcnQgVXNlciBmcm9tIFwiQXBwL01vZGVscy9Vc2VyXCI7XG5pbXBvcnQgYXV0aENvbmZpZyBmcm9tIFwiQ29uZmlnL2F1dGhcIjtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzdWFyaW9zQ29udHJvbGxlciBcbntcbiAgICBwdWJsaWMgYXN5bmMgc3RvcmUoe2F1dGgscmVxdWVzdCxyZXNwb25zZX0pXG4gICAge1xuICAgICAgICBjb25zdCB1c2VyPW5ldyBVc2VyKClcbiAgICAgICAgY29uc3QgTm9tYnJlPXJlcXVlc3QuaW5wdXQoJ05vbWJyZScpXG4gICAgICAgIGNvbnN0IGVtYWlsPXJlcXVlc3QuaW5wdXQoJ2VtYWlsJylcbiAgICAgICAgY29uc3QgcGFzc3dvcmQ9cmVxdWVzdC5pbnB1dCgncGFzc3dvcmQnKVxuICAgICAgICBjb25zdCByb2w9MlxuICAgICAgICB0cnlcbiAgICAgICAge1xuICAgICAgICAgICAgdXNlci5Ob21icmU9Tm9tYnJlXG4gICAgICAgICAgICB1c2VyLmVtYWlsPWVtYWlsXG4gICAgICAgICAgICB1c2VyLnBhc3N3b3JkPXBhc3N3b3JkXG4gICAgICAgICAgICB1c2VyLnJvbD1yb2xcbiAgICAgICAgICAgIGF3YWl0IHVzZXIuc2F2ZSgpXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDIwMClcbiAgICAgICAgfWNhdGNoXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5iYWRSZXF1ZXN0KCdObyB0aWVuZXMgcGVybWlzb3MnKVxuICAgICAgICB9XG4gICAgfVxuICAgIHB1YmxpYyBhc3luYyBzaG93KHthdXRoLHJlc3BvbnNlfSlcbiAgICB7XG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBhd2FpdCBhdXRoLnVzZSgnYXBpJykuYXV0aGVudGljYXRlKClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGF1dGgudXNlKCdhcGknKS51c2VyISlcbiAgICAgICAgICAgIGNvbnN0IHVzZXI9YXdhaXQgVXNlci5hbGwoKVxuICAgICAgICAgICAgcmV0dXJuIHVzZXJcbiAgICAgICAgfWNhdGNoXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLmJhZFJlcXVlc3QoJ05vIHRpZW5lcyBwZXJtaXNvJylcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgYXN5bmMgdXBkYXRlKHthdXRoLHJlcXVlc3QscmVzcG9uc2V9KVxuICAgIHtcbiAgICAgICAgY29uc3QgaWQ9cmVxdWVzdC5pbnB1dCgnaWQnKVxuICAgICAgICBjb25zdCBOb21icmU9cmVxdWVzdC5pbnB1dCgnTm9tYnJlJylcbiAgICAgICAgY29uc3QgZW1haWw9cmVxdWVzdC5pbnB1dCgnZW1haWwnKVxuICAgICAgICBjb25zdCBwYXNzd29yZD1yZXF1ZXN0LmlucHV0KCdwYXNzd29yZCcpXG4gICAgICAgIHRyeVxuICAgICAgICB7XG4gICAgICAgICAgICBhd2FpdCBhdXRoLnVzZSgnYXBpJykuYXV0aGVudGljYXRlKClcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGF1dGgudXNlKCdhcGknKS51c2VyISlcbiAgICAgICAgICAgIGNvbnN0IHVzZXI9YXdhaXQgVXNlci5maW5kT3JGYWlsKGlkKVxuICAgICAgICAgICAgdXNlci5Ob21icmU9Tm9tYnJlXG4gICAgICAgICAgICB1c2VyLmVtYWlsPWVtYWlsXG4gICAgICAgICAgICB1c2VyLnBhc3N3b3JkPXBhc3N3b3JkXG4gICAgICAgICAgICBhd2FpdCB1c2VyLnNhdmUoKVxuICAgICAgICB9Y2F0Y2hcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJhZFJlcXVlc3QoJ0VSUk9SJylcbiAgICAgICAgfVxuICAgIH1cbiAgICBwdWJsaWMgYXN5bmMgZGVsZXRlKHthdXRoLHJlcXVlc3QscmVzcG9uc2V9KVxuICAgIHtcbiAgICAgICAgY29uc3QgaWQ9cmVxdWVzdC5pbnB1dCgnaWQnKVxuICAgICAgICB0cnlcbiAgICAgICAge1xuICAgICAgICAgICAgYXdhaXQgYXV0aC51c2UoJ2FwaScpLmF1dGhlbnRpY2F0ZSgpXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhhdXRoLnVzZSgnYXBpJykudXNlciEpXG4gICAgICAgICAgICBjb25zdCB1c2VyPWF3YWl0IFVzZXIuZmluZE9yRmFpbChpZClcbiAgICAgICAgICAgIGF3YWl0IHVzZXIuZGVsZXRlKClcbiAgICAgICAgfWNhdGNoXG4gICAgICAgIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5iYWRSZXF1ZXN0KCdFUlJPUicpXG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=